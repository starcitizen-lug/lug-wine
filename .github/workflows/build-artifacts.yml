name: Build Artifacts

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      wine_version:
        description: "Select the wine version to pin the build to"
        required: true
        default: ''
        type: string
      lug_rev:
        description: "Select the lug revision"
        required: true
        default: '1'
        type: string
env:
  WINE_VERSION: ${{ inputs.wine_version || github.event.inputs.wine_version }}
  LUG_REV: ${{ inputs.lug_rev || github.event.inputs.lug_rev }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu
            image: ubuntu:22.04
            preset: default
          - os: ubuntu
            image: ubuntu:22.04
            preset: staging-default
    container:
      image: ${{ matrix.image }}
    env:
      DEBIAN_FRONTEND: noninteractive
      XDG_CACHE_HOME: /tmp/.cache
      TZ: UTC
    steps:
      - name: Prepare Container
        shell: bash {0}
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu" ]]; then
            apt-get update
            apt-get install -y git aptitude sudo curl
            mkdir -p /usr/local/include/linux && curl -o /usr/local/include/linux/ntsync.h -fs --retry 5 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/plain/include/uapi/linux/ntsync.h && echo "Latest ntsync.h downloaded!"
          elif [[ "${{ matrix.os }}" == "arch" ]]; then
            pacman -Syu --noconfirm git base-devel sudo git freetype2 graphite harfbuzz libpng fontconfig jack2
            useradd user -G wheel && echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
            chown user -R .
          fi
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Compilation
        shell: bash {0}
        run: |
          echo "$WINE_VERSION" "$LUG_REV"
          ./build-lug-wine.sh "${{ matrix.preset }}" "$WINE_VERSION" "$LUG_REV"
      - name: Upload Archive
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}-${{ matrix.preset }}-build"
          path: ./output